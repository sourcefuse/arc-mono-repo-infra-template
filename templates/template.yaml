apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: arc-mono-repo-infra-template
  title: ARC IAC
  description: Manage all ARC infrastructure provisioning scripts at one place
  tags:
    - terraform
    - monorepo
    - db
    - bootstrap
    - ecr
    - ecs
    - network
    - security
    - waf
    - billing
spec:
  owner: sourcefuse
  type: service

  parameters:
    - title: Project Information
      ui:options:
        # Enable two-column layout for this section
        grid:
          xs: 12
          sm: 6
      required:
        - component_id
        - region
        - namespace
        - route53Domain
      properties:
        component_id:
          title: Name
          type: string
          description: Project Name
        description:
          title: Description
          type: string
          description: About the project
        region:
          title: AWS region
          type: string
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ap-east-1
            - ap-south-1
            - ap-south-2
            - ap-southeast-3
            - ap-southeast-6
            - ap-southeast-4
            - ap-northeast-3
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-northeast-1
            - ca-central-1
            - eu-central-1
            - eu-west-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-south-2
            - eu-north-1
            - eu-central-2
            - il-central-1
            - me-south-1
            - me-central-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        namespace:
          title: Namespace
          type: string
          description: Usually an abbreviation of your organization name, i.e. "sf" or "arc", to help ensure generated IDs are globally unique    # yamllint disable
        route53Domain:
          title: Default Route53 zone
          type: string
          description: Default Route53 zone
        markdown:
          type: 'null' # Needs to be quoted
          description: |
            ---
        environments:
          title: Environment List
          type: array
          minItems: 1
          ui:options:
            addable: true
            orderable: true
            removable: true
          items:
            type: string
            properties:
              someInput:
                type: string


    - title: Deployment Choices 1
      ui:order:
        - bootstrap
        - bucketName
        - dynamoDbLockTableName
        - network
        - vpcCidrBlock
        - database
        - databaseEngineType
        - databaseEngine
      required: []

      properties:
        bootstrap:
          title: Bootstrap Module
          type: boolean
          default: true
        network:
          title: Network Module
          type: boolean
          default: true
        database:
          title: Database Module
          type: boolean
          default: true

      dependencies:
        bootstrap:
          allOf:
            - if:
                properties:
                  bootstrap:
                    const: true
                    module: bootstrap
              then:
                properties:
                  bucketName:
                    title: Bucket Name
                    type: string
                  dynamoDbLockTableName:
                    title: DynamoDB Table name
                    type: string
                required:
                  - bucketName
                  - dynamoDbLockTableName
        network:
          allOf:
            - if:
                properties:
                  network:
                    const: true
              then:
                properties:
                  vpcCidrBlock:
                    title: Bucket Name
                    default: "10.0.0.0/16"
                    type: string ## TODO: Add more details like  no of public/private subnets etc
                required:
                  - vpcCidrBlock
        database:
          allOf:
            - if:
                properties:
                  database:
                    const: true
              then:
                properties:
                  databaseEngineType:
                    title: Database Engine Type
                    type: string
                    default: RDS
                    enum:
                      - RDS
                      - Aurora
                    enumNames:
                      - 'RDS'
                      - 'Aurora'
                  databaseEngine:
                    title: Database Engine
                    type: string
                    default: PostgreSQL
                    enum:
                      - MySQL
                      - PostgreSQL
                      - Oracle
                      - SQLServer
                    enumNames:
                      - 'MySQL'
                      - 'PostgreSQL'
                      - Oracle
                      - SQLServer
                required:
                  - databaseEngineType
                  - databaseEngine


        vpc_cidr_block:
          title: VPC CIDR Block
          type: string
          description: VPC CIDR Block
        db_type:
          title: DB Type
          type: string
          description: Type of DB, i.e. aurora / sqlserver-ex

    - title: Deployment Choices 2
      ui:order:
        - ecs
        - eks
        - s3
        - cloudfront
        - elasticache
        - ecr
        - client-vpn
        - waf
        - security
      required: []

      properties:
        ecs:
          title: ECS Module
          type: boolean
          default: true
        eks:
          title: EKS Module
          type: boolean
          default: false
        s3:
          title: S3 Module
          type: boolean
          default: true
        cloudfront:
          title: Cloudfront Module
          type: boolean
          default: false
        elasticache:
          title: Elasticache Module
          type: boolean
          default: false
        ecr:
          title: ECR Module
          type: boolean
          default: false
        client-vpn:
          title: Client VPN Module
          type: boolean
          default: false
        waf:
          title: WAF Module
          type: boolean
          default: false
        security:
          title: Security Module
          type: boolean
          default: false

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - sourcefuse


  steps:

    - id: fileCreate
      name: Prepare the modules
      action: acme:file:create
      input:
        workingDir: "${{ parameters.namespace }}-${{ parameters.environments[0] }}"
        envList: ${{ parameters.environments }}
        route53Domain: ${{ parameters.route53Domain }}
        modules :
          bootstrap: ${{ parameters.bootstrap }}
          network: ${{ parameters.network }}
          db: ${{ parameters.database }}
          ecs: ${{ parameters.ecs }}
          eks: ${{ parameters.eks }}
          elasticache: ${{ parameters.elasticache }}
          security: ${{ parameters.security }}
          waf: ${{ parameters.waf }}
          s3: ${{ parameters.s3 }}
          client-vpn: ${{ parameters.client-vpn }}
          cloudfront: ${{ parameters.cloudfront }}
          ecr: ${{ parameters.ecr }}

    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./${{ parameters.namespace }}-${{ parameters.environments[0] }}/skeleton
        copyWithoutRender:
          - .github/workflows/*
        #targetPath: ./test-this # This will create the folder in temp workspace/test-this
        values:
          environment: ${{ parameters.environments[0] }}
          namespace: ${{ parameters.namespace }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: fileDelete
      name: Cleanup
      action: acme:file:delete
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    remoteUrl: ${{ steps.publish.output.remoteUrl }}
    entityRef: ${{ steps.register.output.entityRef }}
