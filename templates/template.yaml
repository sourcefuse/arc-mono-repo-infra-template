---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: arc-mono-repo-infra-template
  title: ARC IAC
  description: Manage all ARC infrastructure provisioning scripts at one place
  tags:
    - terraform
    - monorepo
    - db
    - bootstrap
    - ecr
    - ecs
    - network
    - security
    - waf
    - billing
spec:
  owner: sourcefuse
  type: service
  parameters:
    - title: Mono repo infrastructure template
      required:
        - component_id
        - region
        - profile
        - bucket_name
        - dynamodb_lock_table_name
        - iac_name_suffix
        - iac_namespace
        - iac_environment
        - default_route53_zone
        - vpc_cidr_block
        - gh_runner_tag
        - db_type
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
        description:
          title: Description
          type: string
          description: Help others understand what this service is for.
        backstage_namespace:
          title: Backstage namespace
          type: string
          description: Backstage namespace for the output component
        region:
          title: AWS region
          type: string
          description: AWS region to deploy to
        profile:
          title: AWS Profile
          type: string
          description: AWS Profile to use
        bucket_name:
          title: Bucket Name
          type: string
          description: Name of the bucket to use for Terraform State
        dynamodb_lock_table_name:
          title: Dynamo Lock Table
          type: string
          description: Name of the dynamodb table for state locking
        iac_name_suffix:
          title: IaC Name suffix
          type: string
          description: Value that is interpolated with namespace and environment to create uniquely named resources in IaC.    # yamllint disable
        iac_environment:
          title: IaC Environment Name
          type: string
          description: IaC Environment Name
        iac_namespace:
          title: IaC Namespace
          type: string
          description: Usually an abbreviation of your organization name, i.e. "sf" or "arc", to help ensure generated IDs are globally unique    # yamllint disable
        default_route53_zone:
          title: Default Route53 zone
          type: string
          description: Default Route53 zone
        vpc_cidr_block:
          title: VPC CIDR Block
          type: string
          description: VPC CIDR Block
        gh_runner_tag:
          title: GH Runner Tag
          type: string
          description: GH Runner Tag
        db_type:
          title: DB Type
          type: string
          description: Type of DB, i.e. aurora / sqlserver-ex

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ../skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          region: ${{ parameters.region }}
          profile: ${{ parameters.profile }}
          bucket_name: ${{ parameters.bucket_name }}
          dynamodb_lock_table_name: ${{ parameters.dynamodb_lock_table_name }}
          backstage_namespace: ${{ parameters.backstage_namespace }}
          iac_name_suffix: ${{ parameters.iac_name_suffix }}
          iac_namespace: ${{ parameters.iac_namespace }}
          default_route53_zone: ${{ parameters.default_route53_zone }}
          vpc_cidr_block: ${{ parameters.vpc_cidr_block }}
          iac_environment: ${{ parameters.iac_environment }}
          gh_runner_tag: ${{ parameters.gh_runner_tag }}
          db_type: ${{ parameters.db_type }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    remoteUrl: ${{ steps.publish.output.remoteUrl }}
    entityRef: ${{ steps.register.output.entityRef }}
